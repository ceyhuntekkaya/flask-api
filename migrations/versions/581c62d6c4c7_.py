"""empty message

Revision ID: 581c62d6c4c7
Revises: bdd2d4de4123
Create Date: 2023-06-03 12:34:15.464647

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '581c62d6c4c7'
down_revision = 'bdd2d4de4123'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    with op.batch_alter_table('layer_coordinates', schema=None) as batch_op:
        batch_op.alter_column('latitude',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=5),
               existing_nullable=False)
        batch_op.alter_column('longitude',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=5),
               existing_nullable=False)

    with op.batch_alter_table('layers', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    with op.batch_alter_table('maps', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    with op.batch_alter_table('sensors', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    with op.batch_alter_table('symbols', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    with op.batch_alter_table('unities', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    with op.batch_alter_table('user_authorities', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('authority_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('authority_type', sa.String(length=80), nullable=True))
        batch_op.drop_constraint('user_authorities_name_key', type_='unique')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'authorities', ['authority_id'], ['id'])
        batch_op.drop_column('name')

    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.add_column(sa.Column('preference_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('value', sa.String(), nullable=True))
        batch_op.drop_constraint('user_preferences_name_key', type_='unique')
        batch_op.create_foreign_key(None, 'preferences', ['preference_id'], ['id'])
        batch_op.drop_column('name')

    with op.batch_alter_table('user_recents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('value', sa.String(), nullable=True))
        batch_op.drop_constraint('user_recents_name_key', type_='unique')
        batch_op.drop_column('name')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('surname', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('rank', sa.String(length=80), nullable=True))
        batch_op.add_column(sa.Column('registration_number', sa.String(length=80), nullable=True))
        batch_op.add_column(sa.Column('phone', sa.String(length=80), nullable=True))
        batch_op.add_column(sa.Column('mail', sa.String(length=80), nullable=True))
        batch_op.add_column(sa.Column('code', sa.String(length=80), nullable=True))
        batch_op.add_column(sa.Column('phone_extension_line', sa.String(length=80), nullable=True))
        batch_op.create_unique_constraint(None, ['registration_number'])
        batch_op.create_unique_constraint(None, ['mail'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('phone_extension_line')
        batch_op.drop_column('code')
        batch_op.drop_column('mail')
        batch_op.drop_column('phone')
        batch_op.drop_column('registration_number')
        batch_op.drop_column('rank')
        batch_op.drop_column('surname')
        batch_op.drop_column('name')

    with op.batch_alter_table('user_recents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False))
        batch_op.create_unique_constraint('user_recents_name_key', ['name'])
        batch_op.drop_column('value')
        batch_op.drop_column('type')

    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_unique_constraint('user_preferences_name_key', ['name'])
        batch_op.drop_column('value')
        batch_op.drop_column('preference_id')

    with op.batch_alter_table('user_authorities', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_unique_constraint('user_authorities_name_key', ['name'])
        batch_op.drop_column('authority_type')
        batch_op.drop_column('authority_id')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('unities', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('symbols', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('sensors', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('maps', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('layers', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('layer_coordinates', schema=None) as batch_op:
        batch_op.alter_column('longitude',
               existing_type=sa.Float(precision=5),
               type_=sa.REAL(),
               existing_nullable=False)
        batch_op.alter_column('latitude',
               existing_type=sa.Float(precision=5),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    # ### end Alembic commands ###
